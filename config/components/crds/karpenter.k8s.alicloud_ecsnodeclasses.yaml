---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: ecsnodeclasses.karpenter.k8s.alicloud
spec:
  group: karpenter.k8s.alicloud
  names:
    kind: ECSNodeClass
    listKind: ECSNodeClassList
    plural: ecsnodeclasses
    singular: ecsnodeclass
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ECSNodeClass is the Schema for the ECSNodeClass API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              ECSNodeClassSpec is the top level specification for the AliCloud Karpenter Provider.
              This will contain configuration necessary to launch instances in AliCloud.
            properties:
              kubeletConfiguration:
                description: |-
                  KubeletConfiguration defines args to be used when configuring kubelet on provisioned nodes.
                  They are a subset of the upstream types, recognizing not all options may be supported.
                  Wherever possible, the types and names should reflect the upstream kubelet types.
                properties:
                  clusterDNS:
                    description: |-
                      clusterDNS is a list of IP addresses for the cluster DNS server.
                      Note that not all providers may use all addresses.
                    items:
                      type: string
                    type: array
                  cpuCFSQuota:
                    description: CPUCFSQuota enables CPU CFS quota enforcement for
                      containers that specify CPU limits.
                    type: boolean
                  evictionHard:
                    additionalProperties:
                      type: string
                    description: EvictionHard is the map of signal names to quantities
                      that define hard eviction thresholds
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionHard are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  evictionMaxPodGracePeriod:
                    description: |-
                      EvictionMaxPodGracePeriod is the maximum allowed grace period (in seconds) to use when terminating pods in
                      response to soft eviction thresholds being met.
                    format: int32
                    type: integer
                  evictionSoft:
                    additionalProperties:
                      type: string
                    description: EvictionSoft is the map of signal names to quantities
                      that define soft eviction thresholds
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionSoft are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  evictionSoftGracePeriod:
                    additionalProperties:
                      type: string
                    description: EvictionSoftGracePeriod is the map of signal names
                      to quantities that define grace periods for each eviction signal
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for evictionSoftGracePeriod are ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available']
                      rule: self.all(x, x in ['memory.available','nodefs.available','nodefs.inodesFree','imagefs.available','imagefs.inodesFree','pid.available'])
                  imageGCHighThresholdPercent:
                    description: |-
                      ImageGCHighThresholdPercent is the percent of disk usage after which image
                      garbage collection is always run. The percent is calculated by dividing this
                      field value by 100, so this field must be between 0 and 100, inclusive.
                      When specified, the value must be greater than ImageGCLowThresholdPercent.
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  imageGCLowThresholdPercent:
                    description: |-
                      ImageGCLowThresholdPercent is the percent of disk usage before which image
                      garbage collection is never run. Lowest disk usage to garbage collect to.
                      The percent is calculated by dividing this field value by 100,
                      so the field value must be between 0 and 100, inclusive.
                      When specified, the value must be less than imageGCHighThresholdPercent
                    format: int32
                    maximum: 100
                    minimum: 0
                    type: integer
                  kubeReserved:
                    additionalProperties:
                      type: string
                    description: KubeReserved contains resources reserved for Kubernetes
                      system components.
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for kubeReserved are ['cpu','memory','ephemeral-storage','pid']
                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'
                        || x=='pid')
                    - message: kubeReserved value cannot be a negative resource quantity
                      rule: self.all(x, !self[x].startsWith('-'))
                  maxPods:
                    description: |-
                      MaxPods is an override for the maximum number of pods that can run on
                      a worker node instance.
                    format: int32
                    minimum: 0
                    type: integer
                  podsPerCore:
                    description: |-
                      PodsPerCore is an override for the number of pods that can run on a worker node
                      instance based on the number of cpu cores. This value cannot exceed MaxPods, so, if
                      MaxPods is a lower value, that value will be used.
                    format: int32
                    minimum: 0
                    type: integer
                  systemReserved:
                    additionalProperties:
                      type: string
                    description: SystemReserved contains resources reserved for OS
                      system daemons and kernel memory.
                    type: object
                    x-kubernetes-validations:
                    - message: valid keys for systemReserved are ['cpu','memory','ephemeral-storage','pid']
                      rule: self.all(x, x=='cpu' || x=='memory' || x=='ephemeral-storage'
                        || x=='pid')
                    - message: systemReserved value cannot be a negative resource
                        quantity
                      rule: self.all(x, !self[x].startsWith('-'))
                type: object
                x-kubernetes-validations:
                - message: imageGCHighThresholdPercent must be greater than imageGCLowThresholdPercent
                  rule: 'has(self.imageGCHighThresholdPercent) && has(self.imageGCLowThresholdPercent)
                    ?  self.imageGCHighThresholdPercent > self.imageGCLowThresholdPercent  :
                    true'
                - message: evictionSoft OwnerKey does not have a matching evictionSoftGracePeriod
                  rule: has(self.evictionSoft) ? self.evictionSoft.all(e, (e in self.evictionSoftGracePeriod)):true
                - message: evictionSoftGracePeriod OwnerKey does not have a matching
                    evictionSoft
                  rule: has(self.evictionSoftGracePeriod) ? self.evictionSoftGracePeriod.all(e,
                    (e in self.evictionSoft)):true
              vSwitchSelectorTerms:
                description: VSwitchSelectorTerms is a list of or vSwitch selector
                  terms. The terms are ORed.
                items:
                  description: VSwitchSelectorTerm defines selection logic for a vSwitch
                    used by Karpenter to launch nodes.
                  properties:
                    id:
                      description: ID is the vSwitch id in ECS
                      pattern: vsw-[0-9a-z]+
                      type: string
                    tags:
                      additionalProperties:
                        type: string
                      description: |-
                        Tags is a map of key/value tags used to select vSwitches
                        Specifying '*' for a value selects all values for a given tag key.
                      maxProperties: 20
                      type: object
                      x-kubernetes-validations:
                      - message: empty tag keys aren't supported
                        rule: self.all(k, k != '')
                  type: object
                maxItems: 30
                type: array
                x-kubernetes-validations:
                - message: vSwitchSelectorTerms cannot be empty
                  rule: self.size() != 0
                - message: expected at least one, got none, ['tags', 'id']
                  rule: self.all(x, has(x.tags) || has(x.id))
                - message: '''id'' is mutually exclusive, cannot be set with a combination
                    of other fields in vSwitchSelectorTerms'
                  rule: '!self.all(x, has(x.id) && has(x.tags))'
            required:
            - vSwitchSelectorTerms
            type: object
          status:
            description: ECSNodeClassStatus contains the resolved state of the ECSNodeClass
            properties:
              vSwitches:
                description: |-
                  VSwitches contains the current VSwitch values that are available to the
                  cluster under the vSwitch selectors.
                items:
                  description: VSwitch contains resolved VSwitch selector values utilized
                    for node launch
                  properties:
                    id:
                      description: ID of the vSwitch
                      type: string
                    zoneID:
                      description: The associated availability zone ID
                      type: string
                  required:
                  - id
                  - zoneID
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
